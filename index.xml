<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>@JvmName(&#34;Parth&#34;)</title>
    <link>https://jvmname.dev/</link>
    <description>Recent content on @JvmName(&#34;Parth&#34;)</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 23 Jun 2020 16:42:26 -0700</lastBuildDate><atom:link href="https://jvmname.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Static in Kotlin</title>
      <link>https://jvmname.dev/posts/2020/06/static-in-kotlin/</link>
      <pubDate>Tue, 23 Jun 2020 16:42:26 -0700</pubDate>
      
      <guid>https://jvmname.dev/posts/2020/06/static-in-kotlin/</guid>
      <description>ed. note: This blog post was written in June 2020, when Kotlin 1.3.72 was in production. It&amp;rsquo;s possible the Kotlin compiler has gotten smarter since then!
 My current company uses Kotlin for the backend services, so naturally we use the most standard of JVM logging setups: SLF4J + Logback.
From my old-timey Java days, I know that the idiomatic way to set up an SLF4J logger is like so:</description>
    </item>
    
    <item>
      <title>I Go, Hugo, They Go</title>
      <link>https://jvmname.dev/posts/2020/05/i-go-hugo-they-go/</link>
      <pubDate>Mon, 18 May 2020 08:39:55 -0700</pubDate>
      
      <guid>https://jvmname.dev/posts/2020/05/i-go-hugo-they-go/</guid>
      <description>A dump of my experiences getting this blog set up - from Hugo, to GitHub deploy, to Google Domain CNAME entries.
 Ed. note: I have no idea how Hugo is intended to be pronounced; it could be oo-go (√° la Hugo Chavez), or hyoo-go, as the name is pronounced in American English. For the punning purposes of the title, I&amp;rsquo;m assuming it&amp;rsquo;s the latter pronunciation.
 This shouldn&amp;rsquo;t be so complicated.</description>
    </item>
    
    <item>
      <title>Speaking @ Conferences</title>
      <link>https://jvmname.dev/speaking/</link>
      <pubDate>Sun, 17 May 2020 17:57:32 -0700</pubDate>
      
      <guid>https://jvmname.dev/speaking/</guid>
      <description>I&amp;rsquo;m a technical guy, so my talks tend to be technical. That being said, I&amp;rsquo;m happy to stray from the beaten path to speak (and write!) on just about anything, assuming I&amp;rsquo;m qualified ü§ì
2021 Nothing&amp;hellip;yet!   2020 Remember when we went outside and did things? üò∑   2019 Your Strengths Include: Work/Life Balance Droidcon San Francisco &amp;lsquo;19 - Nov. 2019  
Droidcon Berlin &amp;lsquo;19 - July 2019 (earlier version of DCSF &amp;lsquo;19 talk)</description>
    </item>
    
    <item>
      <title>@JvmName(&#34;Parth&#34;)</title>
      <link>https://jvmname.dev/about/</link>
      <pubDate>Sun, 17 May 2020 17:12:57 -0700</pubDate>
      
      <guid>https://jvmname.dev/about/</guid>
      <description>Hi! I&amp;rsquo;m Parth, an Android developer raised on the West Coast (best coast?) but currently in Washington, D.C. üèõ
Work Now Mobile Tech Lead and day-to-day Android engineer @ Hatch, making better financial services targeted at micro-small businesses.
(I also dabble in backend services, but don&amp;rsquo;t quote me on that)
Previously  Android @ Front - better, more collaborative email for businesses Tech Lead &amp;amp; Android @ August Home - IoT smart locks, doorbell cameras, etc.</description>
    </item>
    
    <item>
      <title>Tracking Performance in Kotlin Suspending Functions</title>
      <link>https://jvmname.dev/posts/2020/03/tracking-performance-in-kotlin-suspending-functions/</link>
      <pubDate>Sun, 29 Mar 2020 23:14:00 -0700</pubDate>
      
      <guid>https://jvmname.dev/posts/2020/03/tracking-performance-in-kotlin-suspending-functions/</guid>
      <description>Suspended CupsChris Scott
  Using Firebase Performance Monitoring to track the performance of a plain-ol‚Äô function (Java or Kotlin) is drop-dead simple using the @AddTrace annotation: @AddTrace(&amp;#34;some-trace-name&amp;#34;) fun myBoringFunction() { println(&amp;#34;nothing to see here!&amp;#34;) }
Wait a few moments, and you‚Äôll see some-trace-name in the Firebase Console!
But what if you want to track the performance of a suspend function? Unfortunately, this is not as straightforward.
Attempt #1: Suspending Disbelief Let‚Äôs say you have some uncomplicated suspending function, like so:</description>
    </item>
    
  </channel>
</rss>
