<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kotlin on @JvmName(&#34;Parth&#34;)</title>
    <link>https://jvmname.dev/tags/kotlin/</link>
    <description>Recent content in Kotlin on @JvmName(&#34;Parth&#34;)</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Mon, 11 Jan 2021 00:01:19 -0500</lastBuildDate>
    <atom:link href="https://jvmname.dev/tags/kotlin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Don&#39;t Worry, Just Launch</title>
      <link>https://jvmname.dev/posts/2021/01/dont-worry-just-launch/</link>
      <pubDate>Mon, 11 Jan 2021 00:01:19 -0500</pubDate>
      <guid>https://jvmname.dev/posts/2021/01/dont-worry-just-launch/</guid>
      <description>I&amp;rsquo;ve been writing Kotlin code for nearly 20% of my professional programming life! I wrote my first scrap of Kotlin in roughly mid-2018, and transitioned to writing full-time production Kotlin in mid-2019. Ever since then, I&amp;rsquo;ve been on the Kotlin train 100%.&#xA;Despite all that Kotlin experience, the new Hatch Credit Android app (launching Q1-2021âœ¨) is the first time I&amp;rsquo;ve used 100% coroutines in production code, so I still write some dumb code sometimes.</description>
    </item>
    <item>
      <title>Static in Kotlin</title>
      <link>https://jvmname.dev/posts/2020/06/static-in-kotlin/</link>
      <pubDate>Tue, 23 Jun 2020 16:42:26 -0700</pubDate>
      <guid>https://jvmname.dev/posts/2020/06/static-in-kotlin/</guid>
      <description>ed. note: This blog post was written in June 2020, when Kotlin 1.3.72 was in production. It&amp;rsquo;s possible the Kotlin compiler has gotten smarter since then!&#xA;My current company uses Kotlin for the backend services, so naturally we use the most standard of JVM logging setups: SLF4J + Logback.&#xA;From my old-timey Java days, I know that the idiomatic way to set up an SLF4J logger is like so:</description>
    </item>
  </channel>
</rss>
