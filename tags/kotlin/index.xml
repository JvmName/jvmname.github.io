<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Kotlin on @JvmName("Parth")</title><link>https://jvmname.dev/tags/kotlin/</link><description>Recent content in Kotlin on @JvmName("Parth")</description><generator>Hugo</generator><language>en</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Mon, 11 Jan 2021 00:01:19 -0500</lastBuildDate><atom:link href="https://jvmname.dev/tags/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>Don't Worry, Just Launch</title><link>https://jvmname.dev/posts/2021/01/dont-worry-just-launch/</link><pubDate>Mon, 11 Jan 2021 00:01:19 -0500</pubDate><guid>https://jvmname.dev/posts/2021/01/dont-worry-just-launch/</guid><description>&lt;p&gt;I&amp;rsquo;ve been writing Kotlin code for nearly 20% of my professional programming life! I wrote my first scrap of Kotlin in roughly mid-2018, and transitioned to writing full-time production Kotlin in mid-2019. Ever since then, I&amp;rsquo;ve been on the Kotlin train 100%.&lt;br&gt;
Despite all that Kotlin experience, the new &lt;a href="https://play.google.com/store/apps/details?id=com.hatchcard.android"&gt;Hatch Credit Android app&lt;/a&gt; (launching Q1-2021âœ¨) is the first time I&amp;rsquo;ve used 100% coroutines in production code, so I still write some dumb code sometimes.&lt;/p&gt;</description></item><item><title>Static in Kotlin</title><link>https://jvmname.dev/posts/2020/06/static-in-kotlin/</link><pubDate>Tue, 23 Jun 2020 16:42:26 -0700</pubDate><guid>https://jvmname.dev/posts/2020/06/static-in-kotlin/</guid><description>&lt;hr&gt;
&lt;p&gt;&lt;em&gt;ed. note:&lt;/em&gt; This blog post was written in June 2020, when Kotlin 1.3.72 was in production. It&amp;rsquo;s possible the Kotlin compiler has gotten smarter since then!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;My &lt;a href="https://www.hatchcard.com/"&gt;current company&lt;/a&gt; uses Kotlin for the backend services, so naturally we use the most standard of JVM logging setups: &lt;a href="http://www.slf4j.org/"&gt;SLF4J&lt;/a&gt; + &lt;a href="http://logback.qos.ch/"&gt;Logback&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;From my old-timey Java days, I know that the idiomatic way to set up an SLF4J logger is like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#e2e4e5;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-java" data-lang="java"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#ff5c57"&gt;public&lt;/span&gt; &lt;span style="color:#ff5c57"&gt;class&lt;/span&gt; &lt;span style="color:#f3f99d"&gt;Direction&lt;/span&gt; { 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#ff5c57"&gt;private&lt;/span&gt; &lt;span style="color:#ff5c57"&gt;static&lt;/span&gt; &lt;span style="color:#ff5c57"&gt;final&lt;/span&gt; Logger logger &lt;span style="color:#ff6ac1"&gt;=&lt;/span&gt; LoggerFactory.&lt;span style="color:#57c7ff"&gt;getLogger&lt;/span&gt;(Direction.&lt;span style="color:#57c7ff"&gt;class&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#ff5c57"&gt;public&lt;/span&gt; &lt;span style="color:#9aedfe"&gt;void&lt;/span&gt; &lt;span style="color:#57c7ff"&gt;navigate&lt;/span&gt;() { 
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; logger.&lt;span style="color:#57c7ff"&gt;info&lt;/span&gt;(...)
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;But it&amp;rsquo;s 2020, and we write Kotlin now ðŸŽ‰ A few websites I found helpfully suggest the most basic-but-functional Kotlin version of this:&lt;/p&gt;</description></item></channel></rss>